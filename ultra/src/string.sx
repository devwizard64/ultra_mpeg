#include <ultra64.h>

.set noreorder
.set noat

.align 4

/* void *memcpy(void *, const void *, size_t) */
.globl memcpy
memcpy:
    move    $v0, $a0
    beqz    $a2, .L80327414
    move    $v1, $a1
.L803273FC:
    lbu     $t6, 0x0000($v1)
    addiu   $a2, $a2, -0x0001
    addiu   $v0, $v0, 0x0001
    addiu   $v1, $v1, 0x0001
    bnez    $a2, .L803273FC
    sb      $t6, -0x0001($v0)
.L80327414:
    jr      $ra
    move    $v0, $a0

/* size_t strlen(const char *) */
.globl strlen
strlen:
    lbu     $t6, 0x0000($a0)
    move    $v1, $a0
    beqz    $t6, .L8032743C
    nop
    lbu     $t7, 0x0001($v1)
.L80327430:
    addiu   $v1, $v1, 0x0001
    bnezl   $t7, .L80327430
    lbu     $t7, 0x0001($v1)
.L8032743C:
    jr      $ra
    subu    $v0, $v1, $a0

/* const char *strchr(const char *, int) */
.globl strchr
strchr:
    lbu     $v1, 0x0000($a0)
    andi    $t6, $a1, 0x00FF
    andi    $v0, $a1, 0x00FF
    beql    $t6, $v1, .L8032747C
    move    $v0, $a0
.L80327458:
    bnezl   $v1, .L8032746C
    lbu     $v1, 0x0001($a0)
    jr      $ra
    move    $v0, $0
    lbu     $v1, 0x0001($a0)
.L8032746C:
    addiu   $a0, $a0, 0x0001
    bne     $v0, $v1, .L80327458
    nop
    move    $v0, $a0
.L8032747C:
    jr      $ra
    nop
