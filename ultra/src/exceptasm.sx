#include <ultra64.h>

.set noreorder
.set noat
.set gp=64

.align 4

.globl __osExceptionPreamble
__osExceptionPreamble:
    lui     $k0, %hi(__osException)
    addiu   $k0, %lo(__osException)
    jr      $k0
    nop

__osException:
    lui     $k0, %hi(__osThreadSave)
    addiu   $k0, %lo(__osThreadSave)
    sd      $at, 0x0020($k0)
    mfc0    $k1, C0_SR
    sw      $k1, 0x0118($k0)
    li      $at, -0x0004
    and     $k1, $k1, $at
    mtc0    $k1, C0_SR
    sd      $t0, 0x0058($k0)
    sd      $t1, 0x0060($k0)
    sd      $t2, 0x0068($k0)
    sw      $0, 0x0018($k0)
    mfc0    $t0, C0_CAUSE
    andi    $t1, $t0, 0x007C
    li      $t2, 0x0000
    bne     $t1, $t2, savecontext
    nop
    and     $t1, $k1, $t0
    andi    $t2, $t1, 0x4000
    beqz    $t2, notIP7
    nop
    li      $t1, 0x0001
    lui     $at, %hi(__osIsRdbWrite)
    b       .L80327714
    sw      $t1, %lo(__osIsRdbWrite)($at)
notIP7:
    andi    $t2, $t1, 0x2000
    beqz    $t2, savecontext
    nop
    li      $t1, 0x0001
    lui     $at, %hi(__osIsRdbRead)
    b       .L80327714
    sw      $t1, %lo(__osIsRdbRead)($at)
savecontext:
    lui     $at, %hi(__osIsRdbWrite)
    sw      $0, %lo(__osIsRdbWrite)($at)
    lui     $at, %hi(__osIsRdbRead)
    move    $t0, $k0
    sw      $0, %lo(__osIsRdbRead)($at)
    lui     $k0, %hi(__osRunningThread)
    lw      $k0, %lo(__osRunningThread)($k0)
    ld      $t1, 0x0020($t0)
    sd      $t1, 0x0020($k0)
    ld      $t1, 0x0118($t0)
    sd      $t1, 0x0118($k0)
    ld      $t1, 0x0058($t0)
    sd      $t1, 0x0058($k0)
    ld      $t1, 0x0060($t0)
    sd      $t1, 0x0060($k0)
    ld      $t1, 0x0068($t0)
    sd      $t1, 0x0068($k0)
.L80327714:
    mflo    $t0
    sd      $t0, 0x0108($k0)
    mfhi    $t0
    sd      $v0, 0x0028($k0)
    sd      $v1, 0x0030($k0)
    sd      $a0, 0x0038($k0)
    sd      $a1, 0x0040($k0)
    sd      $a2, 0x0048($k0)
    sd      $a3, 0x0050($k0)
    sd      $t3, 0x0070($k0)
    sd      $t4, 0x0078($k0)
    sd      $t5, 0x0080($k0)
    sd      $t6, 0x0088($k0)
    sd      $t7, 0x0090($k0)
    sd      $s0, 0x0098($k0)
    sd      $s1, 0x00A0($k0)
    sd      $s2, 0x00A8($k0)
    sd      $s3, 0x00B0($k0)
    sd      $s4, 0x00B8($k0)
    sd      $s5, 0x00C0($k0)
    sd      $s6, 0x00C8($k0)
    sd      $s7, 0x00D0($k0)
    sd      $t8, 0x00D8($k0)
    sd      $t9, 0x00E0($k0)
    sd      $gp, 0x00E8($k0)
    sd      $sp, 0x00F0($k0)
    sd      $s8, 0x00F8($k0)
    sd      $ra, 0x0100($k0)
    sd      $t0, 0x0110($k0)
    mfc0    $t0, C0_EPC
    sw      $t0, 0x011C($k0)
    lw      $t0, 0x0018($k0)
    beqz    $t0, .L803277E8
    nop
    cfc1    $t0, $31
    nop
    sw      $t0, 0x012C($k0)
    sdc1    $f0, 0x0130($k0)
    sdc1    $f2, 0x0138($k0)
    sdc1    $f4, 0x0140($k0)
    sdc1    $f6, 0x0148($k0)
    sdc1    $f8, 0x0150($k0)
    sdc1    $f10, 0x0158($k0)
    sdc1    $f12, 0x0160($k0)
    sdc1    $f14, 0x0168($k0)
    sdc1    $f16, 0x0170($k0)
    sdc1    $f18, 0x0178($k0)
    sdc1    $f20, 0x0180($k0)
    sdc1    $f22, 0x0188($k0)
    sdc1    $f24, 0x0190($k0)
    sdc1    $f26, 0x0198($k0)
    sdc1    $f28, 0x01A0($k0)
    sdc1    $f30, 0x01A8($k0)
.L803277E8:
    mfc0    $t0, C0_CAUSE
    sw      $t0, 0x0120($k0)
    lui     $t1, %hi(0xA430000C)
    lw      $t1, %lo(0xA430000C)($t1)
    sw      $t1, 0x0128($k0)
    li      $t1, 0x0002
    sh      $t1, 0x0010($k0)
    lui     $t1, %hi(__osIsRdbWrite)
    lw      $t1, %lo(__osIsRdbWrite)($t1)
    beqz    $t1, no_kdebug
    nop
    lui     $t2, %hi(0xC0000008)
    sw      $0, %lo(0xC0000008)($t2)
    lui     $a0, %hi(0xC0000000)
    addiu   $t2, %lo(0xC0000008)
    jal     kdebugserver
    lw      $a0, %lo(0xC0000000)($a0)
    b       __osDispatchThreadSave
    nop
no_kdebug:
    lui     $t1, %hi(__osIsRdbRead)
    lw      $t1, %lo(__osIsRdbRead)($t1)
    beqz    $t1, no_rdb_mesg
    nop
    lui     $t2, %hi(0xC000000C)
    sw      $0, %lo(0xC000000C)($t2)
    lui     $t1, %hi(__osRdbSendMessage)
    lw      $t1, %lo(__osRdbSendMessage)($t1)
    addiu   $t2, %lo(0xC000000C)
    beqz    $t1, .L80327868
    nop
    jal     send_mesg
    li      $a0, 0x0078
.L80327868:
    lui     $t1, %hi(__osRdbWriteOK)
    lw      $t1, %lo(__osRdbWriteOK)($t1)
    lui     $at, %hi(__osRdbWriteOK)
    addi    $t1, $t1, 0x0001
    b       __osDispatchThreadSave
    sw      $t1, %lo(__osRdbWriteOK)($at)
no_rdb_mesg:
    andi    $t1, $t0, 0x007C
    li      $t2, 0x0024
    beq     $t1, $t2, handle_break
    nop
    li      $t2, 0x002C
    beq     $t1, $t2, handle_CpU
    nop
    li      $t2, 0x0000
    bne     $t1, $t2, panic
    nop

handle_interrupt:
    and     $s0, $k1, $t0
next_interrupt:
    andi    $t1, $s0, 0xFF00
    srl     $t2, $t1, 12
    bnez    $t2, .L803278C4
    nop
    srl     $t2, $t1, 8
    addi    $t2, $t2, 0x0010
.L803278C4:
    lui     $at, %hi(__osIntOffTable)
    addu    $at, $at, $t2
    lbu     $t2, %lo(__osIntOffTable)($at)
    lui     $at, %hi(__osIntTable)
    addu    $at, $at, $t2
    lw      $t2, %lo(__osIntTable)($at)
    jr      $t2
    nop

counter:
    mfc0    $t1, C0_COMPARE
    mtc0    $t1, C0_COMPARE
    jal     send_mesg
    li      $a0, 0x0018
    lui     $at, 0xFFFF7FFF >> 16
    ori     $at, 0xFFFF7FFF & 0xFFFF
    b       next_interrupt
    and     $s0, $s0, $at

cart:
    li      $t2, 0x0004
    lui     $at, %hi(__osHwIntTable)
    addu    $at, $at, $t2
    lw      $t2, %lo(__osHwIntTable)($at)
    beqz    $t2, .L80327924
    nop
    jalr    $t2
    nop
.L80327924:
    jal     send_mesg
    li      $a0, 0x0010
    li      $at, -0x0801
    b       next_interrupt
    and     $s0, $s0, $at

rcp:
    lui     $s1, %hi(0xA4300008)
    lw      $s1, %lo(0xA4300008)($s1)
    andi    $s1, $s1, 0x003F
    andi    $t1, $s1, 0x0001
    beqz    $t1, vi
    nop
    lui     $t4, %hi(0xA4040010)
    lw      $t4, %lo(0xA4040010)($t4)
    li      $t1, 0x0008
    lui     $at, %hi(0xA4040010)
    andi    $t4, $t4, 0x0300
    andi    $s1, $s1, 0x003E
    beqz    $t4, sp_other_break
    sw      $t1, %lo(0xA4040010)($at)
    jal     send_mesg
    li      $a0, 0x0020
    beqz    $s1, NoMoreRcpInts
    nop
    b       vi
    nop
sp_other_break:
    jal     send_mesg
    li      $a0, 0x0058
    beqz    $s1, NoMoreRcpInts
    nop
vi:
    andi    $t1, $s1, 0x0008
    beqz    $t1, ai
    lui     $at, %hi(0xA4400010)
    andi    $s1, $s1, 0x0037
    sw      $0, %lo(0xA4400010)($at)
    jal     send_mesg
    li      $a0, 0x0038
    beqz    $s1, NoMoreRcpInts
    nop
ai:
    andi    $t1, $s1, 0x0004
    beqz    $t1, si
    nop
    li      $t1, 0x0001
    lui     $at, %hi(0xA450000C)
    andi    $s1, $s1, 0x003B
    sw      $t1, %lo(0xA450000C)($at)
    jal     send_mesg
    li      $a0, 0x0030
    beqz    $s1, NoMoreRcpInts
    nop
si:
    andi    $t1, $s1, 0x0002
    beqz    $t1, pi
    lui     $at, %hi(0xA4800018)
    andi    $s1, $s1, 0x003D
    sw      $0, %lo(0xA4800018)($at)
    jal     send_mesg
    li      $a0, 0x0028
    beqz    $s1, NoMoreRcpInts
    nop
pi:
    andi    $t1, $s1, 0x0010
    beqz    $t1, dp
    nop
    li      $t1, 0x0002
    lui     $at, %hi(0xA4600010)
    andi    $s1, $s1, 0x002F
    sw      $t1, %lo(0xA4600010)($at)
    jal     send_mesg
    li      $a0, 0x0040
    beqz    $s1, NoMoreRcpInts
    nop
dp:
    andi    $t1, $s1, 0x0020
    beqz    $t1, NoMoreRcpInts
    nop
    li      $t1, 0x0800
    lui     $at, %hi(0xA4300000)
    andi    $s1, $s1, 0x001F
    sw      $t1, %lo(0xA4300000)($at)
    jal     send_mesg
    li      $a0, 0x0048
NoMoreRcpInts:
    li      $at, -0x0401
    b       next_interrupt
    and     $s0, $s0, $at

prenmi:
    lw      $k1, 0x0118($k0)
    li      $at, -0x1001
    lui     $t1, %hi(__osShutdown)
    and     $k1, $k1, $at
    sw      $k1, 0x0118($k0)
    addiu   $t1, %lo(__osShutdown)
    lw      $t2, 0x0000($t1)
    beqz    $t2, firstnmi
    li      $at, -0x1001
    b       redispatch
    and     $s0, $s0, $at
firstnmi:
    li      $t2, 0x0001
    sw      $t2, 0x0000($t1)
    jal     send_mesg
    li      $a0, 0x0070
    lui     $t2, %hi(__osRunQueue)
    lw      $t2, %lo(__osRunQueue)($t2)
    li      $at, -0x1001
    and     $s0, $s0, $at
    lw      $k1, 0x0118($t2)
    and     $k1, $k1, $at
    b       redispatch
    sw      $k1, 0x0118($t2)

sw2:
    li      $at, -0x0201
    and     $t0, $t0, $at
    mtc0    $t0, C0_CAUSE
    jal     send_mesg
    li      $a0, 0x0008
    li      $at, -0x0201
    b       next_interrupt
    and     $s0, $s0, $at

sw1:
    li      $at, -0x0101
    and     $t0, $t0, $at
    mtc0    $t0, C0_CAUSE
    jal     send_mesg
    li      $a0, 0x0000
    li      $at, -0x0101
    b       next_interrupt
    and     $s0, $s0, $at

handle_break:
    li      $t1, 0x0001
    sh      $t1, 0x0012($k0)
    jal     send_mesg
    li      $a0, 0x0050
    b       redispatch
    nop

redispatch:
    lui     $t2, %hi(__osRunQueue)
    lw      $t2, %lo(__osRunQueue)($t2)
    lw      $t1, 0x0004($k0)
    lw      $t3, 0x0004($t2)
    slt     $at, $t1, $t3
    beqz    $at, enqueueRunning
    nop
    lui     $a0, %hi(__osRunQueue)
    move    $a1, $k0
    jal     __osEnqueueThread
    addiu   $a0, %lo(__osRunQueue)
    j       __osDispatchThread
    nop
enqueueRunning:
    lui     $t1, %hi(__osRunQueue)
    addiu   $t1, %lo(__osRunQueue)
    lw      $t2, 0x0000($t1)
    sw      $t2, 0x0000($k0)
    j       __osDispatchThread
    sw      $k0, 0x0000($t1)

panic:
    lui     $at, %hi(__osFaultedThread)
    sw      $k0, %lo(__osFaultedThread)($at)
    li      $t1, 0x0001
    sh      $t1, 0x0010($k0)
    li      $t1, 0x0002
    sh      $t1, 0x0012($k0)
    mfc0    $t2, C0_BADVADDR
    sw      $t2, 0x0124($k0)
    jal     send_mesg
    li      $a0, 0x0060
    j       __osDispatchThread
    nop

send_mesg:
    lui     $t2, %hi(__osEventStateTab)
    addiu   $t2, %lo(__osEventStateTab)
    addu    $t2, $t2, $a0
    lw      $t1, 0x0000($t2)
    move    $s2, $ra
    beqz    $t1, send_done
    nop
    lw      $t3, 0x0008($t1)
    lw      $t4, 0x0010($t1)
    slt     $at, $t3, $t4
    beqz    $at, send_done
    nop
    lw      $t5, 0x000C($t1)
    addu    $t5, $t5, $t3
    div     $0, $t5, $t4
    bnez    $t4, .L80327BE0
    nop
    break   7
.L80327BE0:
    li      $at, -0x0001
    bne     $t4, $at, .L80327BF8
    li      $at, 0x80000000
    bne     $t5, $at, .L80327BF8
    nop
    break   6
.L80327BF8:
    lw      $t4, 0x0014($t1)
    mfhi    $t5
    sll     $t5, $t5, 2
    addu    $t4, $t4, $t5
    lw      $t5, 0x0004($t2)
    addiu   $t2, $t3, 0x0001
    sw      $t5, 0x0000($t4)
    sw      $t2, 0x0008($t1)
    lw      $t2, 0x0000($t1)
    lw      $t3, 0x0000($t2)
    beqz    $t3, send_done
    nop
    jal     __osPopThread
    move    $a0, $t1
    move    $t2, $v0
    lui     $a0, %hi(__osRunQueue)
    move    $a1, $t2
    jal     __osEnqueueThread
    addiu   $a0, %lo(__osRunQueue)
send_done:
    jr      $s2
    nop

handle_CpU:
    li      $at, 0x30000000
    and     $t1, $t0, $at
    srl     $t1, $t1, 28
    li      $t2, 0x0001
    bne     $t1, $t2, panic
    nop
    lw      $k1, 0x0118($k0)
    li      $at, 0x20000000
    li      $t1, 0x0001
    or      $k1, $k1, $at
    sw      $t1, 0x0018($k0)
    b       enqueueRunning
    sw      $k1, 0x0118($k0)

.globl __osEnqueueAndYield
__osEnqueueAndYield:
    lui     $a1, %hi(__osRunningThread)
    lw      $a1, %lo(__osRunningThread)($a1)
    mfc0    $t0, C0_SR
    lw      $k1, 0x0018($a1)
    ori     $t0, $t0, 0x0002
    sw      $t0, 0x0118($a1)
    sd      $s0, 0x0098($a1)
    sd      $s1, 0x00A0($a1)
    sd      $s2, 0x00A8($a1)
    sd      $s3, 0x00B0($a1)
    sd      $s4, 0x00B8($a1)
    sd      $s5, 0x00C0($a1)
    sd      $s6, 0x00C8($a1)
    sd      $s7, 0x00D0($a1)
    sd      $gp, 0x00E8($a1)
    sd      $sp, 0x00F0($a1)
    sd      $s8, 0x00F8($a1)
    sd      $ra, 0x0100($a1)
    beqz    $k1, .L80327CF0
    sw      $ra, 0x011C($a1)
    cfc1    $k1, $31
    sdc1    $f20, 0x0180($a1)
    sdc1    $f22, 0x0188($a1)
    sdc1    $f24, 0x0190($a1)
    sdc1    $f26, 0x0198($a1)
    sdc1    $f28, 0x01A0($a1)
    sdc1    $f30, 0x01A8($a1)
    sw      $k1, 0x012C($a1)
.L80327CF0:
    lui     $k1, %hi(0xA430000C)
    lw      $k1, %lo(0xA430000C)($k1)
    beqz    $a0, noEnqueue
    sw      $k1, 0x0128($a1)
    jal     __osEnqueueThread
    nop
noEnqueue:
    j       __osDispatchThread
    nop

.globl __osEnqueueThread
__osEnqueueThread:
    lw      $t8, 0x0000($a0)
    lw      $t7, 0x0004($a1)
    move    $t9, $a0
    lw      $t6, 0x0004($t8)
    slt     $at, $t6, $t7
    bnez    $at, .L80327D44
    nop
.L80327D2C:
    move    $t9, $t8
    lw      $t8, 0x0000($t8)
    lw      $t6, 0x0004($t8)
    slt     $at, $t6, $t7
    beqz    $at, .L80327D2C
    nop
.L80327D44:
    lw      $t8, 0x0000($t9)
    sw      $t8, 0x0000($a1)
    sw      $a1, 0x0000($t9)
    jr      $ra
    sw      $a0, 0x0008($a1)

.globl __osPopThread
__osPopThread:
    lw      $v0, 0x0000($a0)
    lw      $t9, 0x0000($v0)
    jr      $ra
    sw      $t9, 0x0000($a0)

.globl __osDispatchThread
__osDispatchThread:
    lui     $a0, %hi(__osRunQueue)
    jal     __osPopThread
    addiu   $a0, %lo(__osRunQueue)
    lui     $at, %hi(__osRunningThread)
    sw      $v0, %lo(__osRunningThread)($at)
    li      $t0, 0x0004
    sh      $t0, 0x0010($v0)
    move    $k0, $v0
__osDispatchThreadSave:
    ld      $k1, 0x0108($k0)
    ld      $at, 0x0020($k0)
    ld      $v0, 0x0028($k0)
    mtlo    $k1
    ld      $k1, 0x0110($k0)
    ld      $v1, 0x0030($k0)
    ld      $a0, 0x0038($k0)
    ld      $a1, 0x0040($k0)
    ld      $a2, 0x0048($k0)
    ld      $a3, 0x0050($k0)
    ld      $t0, 0x0058($k0)
    ld      $t1, 0x0060($k0)
    ld      $t2, 0x0068($k0)
    ld      $t3, 0x0070($k0)
    ld      $t4, 0x0078($k0)
    ld      $t5, 0x0080($k0)
    ld      $t6, 0x0088($k0)
    ld      $t7, 0x0090($k0)
    ld      $s0, 0x0098($k0)
    ld      $s1, 0x00A0($k0)
    ld      $s2, 0x00A8($k0)
    ld      $s3, 0x00B0($k0)
    ld      $s4, 0x00B8($k0)
    ld      $s5, 0x00C0($k0)
    ld      $s6, 0x00C8($k0)
    ld      $s7, 0x00D0($k0)
    ld      $t8, 0x00D8($k0)
    ld      $t9, 0x00E0($k0)
    ld      $gp, 0x00E8($k0)
    mthi    $k1
    ld      $sp, 0x00F0($k0)
    ld      $s8, 0x00F8($k0)
    ld      $ra, 0x0100($k0)
    lw      $k1, 0x011C($k0)
    mtc0    $k1, C0_EPC
    lw      $k1, 0x0118($k0)
    mtc0    $k1, C0_SR
    lw      $k1, 0x0018($k0)
    beqz    $k1, .L80327E70
    nop
    lw      $k1, 0x012C($k0)
    ctc1    $k1, $31
    ldc1    $f0, 0x0130($k0)
    ldc1    $f2, 0x0138($k0)
    ldc1    $f4, 0x0140($k0)
    ldc1    $f6, 0x0148($k0)
    ldc1    $f8, 0x0150($k0)
    ldc1    $f10, 0x0158($k0)
    ldc1    $f12, 0x0160($k0)
    ldc1    $f14, 0x0168($k0)
    ldc1    $f16, 0x0170($k0)
    ldc1    $f18, 0x0178($k0)
    ldc1    $f20, 0x0180($k0)
    ldc1    $f22, 0x0188($k0)
    ldc1    $f24, 0x0190($k0)
    ldc1    $f26, 0x0198($k0)
    ldc1    $f28, 0x01A0($k0)
    ldc1    $f30, 0x01A8($k0)
.L80327E70:
    lw      $k1, 0x0128($k0)
    sll     $k1, $k1, 1
    lui     $k0, %hi(__osRcpImTable)
    addiu   $k0, %lo(__osRcpImTable)
    addu    $k1, $k1, $k0
    lhu     $k1, 0x0000($k1)
    lui     $k0, %hi(0xA430000C)
    addiu   $k0, %lo(0xA430000C)
    sw      $k1, 0x0000($k0)
    nop
    nop
    nop
    nop
    eret

.globl __osCleanupThread
__osCleanupThread:
    jal     osDestroyThread
    move    $a0, $0

.data
.align 4

__osHwIntTable:
    .word 0
    .word 0
    .word 0
    .word 0
    .word 0

__osIsRdbWrite:
    .word 0

__osIsRdbRead:
    .word 0

.rdata
.align 4

__osIntOffTable:
    .byte 4*0, 4*5, 4*6, 4*6, 4*7, 4*7, 4*7, 4*7
    .byte 4*8, 4*8, 4*8, 4*8, 4*8, 4*8, 4*8, 4*8
    .byte 4*0, 4*1, 4*2, 4*2, 4*3, 4*3, 4*3, 4*3
    .byte 4*4, 4*4, 4*4, 4*4, 4*4, 4*4, 4*4, 4*4

__osIntTable:
    .word redispatch
    .word sw1
    .word sw2
    .word rcp
    .word cart
    .word prenmi
    .word panic
    .word panic
    .word counter
