#include <ultra64.h>

.set noreorder
.set noat

.align 4

/* void osSetThreadPri(OSThread *t, OSPri pri) */
.globl osSetThreadPri
osSetThreadPri:
    addiu   $sp, $sp, -0x0028
    sw      $ra, 0x001C($sp)
    sw      $a0, 0x0028($sp)
    sw      $a1, 0x002C($sp)
    jal     __osDisableInt
    sw      $s0, 0x0018($sp)
    lw      $t6, 0x0028($sp)
    move    $s0, $v0
    bnez    $t6, .L80323724
    nop
    lui     $t7, %hi(__osRunningThread)
    lw      $t7, %lo(__osRunningThread)($t7)
    sw      $t7, 0x0028($sp)
.L80323724:
    lw      $t8, 0x0028($sp)
    lw      $t0, 0x002C($sp)
    lw      $t9, 0x0004($t8)
    beq     $t9, $t0, .L803237B4
    nop
    sw      $t0, 0x0004($t8)
    lui     $t2, %hi(__osRunningThread)
    lw      $t2, %lo(__osRunningThread)($t2)
    lw      $t1, 0x0028($sp)
    beq     $t1, $t2, .L8032377C
    nop
    lhu     $t3, 0x0010($t1)
    li      $at, 0x0001
    beq     $t3, $at, .L8032377C
    nop
    lw      $a0, 0x0008($t1)
    jal     __osDequeueThread
    move    $a1, $t1
    lw      $t4, 0x0028($sp)
    lw      $a0, 0x0008($t4)
    jal     __osEnqueueThread
    move    $a1, $t4
.L8032377C:
    lui     $t5, %hi(__osRunningThread)
    lui     $t7, %hi(__osRunQueue)
    lw      $t7, %lo(__osRunQueue)($t7)
    lw      $t5, %lo(__osRunningThread)($t5)
    lw      $t9, 0x0004($t7)
    lw      $t6, 0x0004($t5)
    slt     $at, $t6, $t9
    beqz    $at, .L803237B4
    nop
    li      $t0, 0x0002
    lui     $a0, %hi(__osRunQueue)
    sh      $t0, 0x0010($t5)
    jal     __osEnqueueAndYield
    addiu   $a0, %lo(__osRunQueue)
.L803237B4:
    jal     __osRestoreInt
    move    $a0, $s0
    lw      $ra, 0x001C($sp)
    lw      $s0, 0x0018($sp)
    addiu   $sp, $sp, 0x0028
    jr      $ra
    nop
